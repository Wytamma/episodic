logo: Episodic
tagline: A pipeline for fitting and testing Fixed Local Clock (FLC) molecular clock models for episodic evolution.
version: __about__.py
annotations:
  alignment:
    type: Path
    help: "[REQUIRED] Path to a fasta file containing the alignment."
    required: false
    short: a
    default: null
  group:
    type: List[str]
    help: "[REQUIRED] Group sequences containing this value (in the header) to define a FLC. Can specify multiple."
    required: false
    short: g
    default: null
  clock:
    type: List[str]
    help: "Molecular clock models to run. Options are 'strict', 'relaxed', 'flc-stem', 'flc-shared-stem', 'flc-clade', and 'flc-shared-clade'. Can specify multiple."
    required: false
    default: ['flc-stem']
  rate_gamma_prior_shape:
    type: float
    help: "Shape parameter for the gamma prior on the rate."
    required: false
    default: 0.5
    short: shape
  rate_gamma_prior_scale:
    type: float
    help: "Scale parameter for the gamma prior on the rate."
    required: false
    default: 0.1
    short: scale
  mcc_tree:
    heights:
      type: List[str]
      help: "Height to use for the MCC tree. Can specify multiple. 'mean' (default), 'median', 'keep' or 'ca'"
      required: false
      default: ['mean']
  date_delimiter:
    type: str
    help: "Delimiter to use to split the date from the rest of the header."
    required: false
    default: '@'
  date_index:
    type: int
    help: "Index of the date in the header. 0-based."
    required: false
    default: -1
  newick:
    type: Path
    help: "Path to a newick tree file. If provided topology will be fixed."
    required: false
  output:
    dir:
      type: Path
      help: "Path to the output directory."
      required: false
      default: "."
      short: o
    dated:
      type: bool
      help: Create a timestamped output subdirectory
      required: false
      default: false
  beast:
    chain_length:
      type: int
      help: "Length of the chain."
      required: false
      default: 10000000
      short: cl
    samples:
      type: int
      help: "Number of samples to draw from the chain."
      required: false
      default: 10000
      short: s
    duplicates:
      type: int
      help: "Number of duplicate runs. To test for convergence."
      required: false
      default: 2
    template:
      type: Path
      help: "Path to an Episodic BEAST template file to use in the analysis."
      required: false
    fit_clocks:
      type: bool
      help: "If true, BEAST will be used to fit the clocks. Use --no-beast-fit-clocks to only run the MLE analysis."
      required: false
      default: true
    threads:
      type: int
      help: "Max number of threads to use for BEAST."
      required: false
      default: 4
    envmodules:
      type: List[str]
      help: "List of environment modules to load for beast."
      default:
        - "GCC/11.3.0"
        - "beagle-lib/3.1.2-CUDA-11.7.0"
  marginal_likelihood:
    estimate:
      type: bool
      help: "If -mle flag is passed the PS/SS will be used to estimate the marginal likelihood."
      required: false
      default: false
      short: mle
    paths:
      type: int
      help: "Number of paths to use for the marginal likelihood estimation."
      required: false
      default: 100
    chain_length:
      type: int
      help: "Length of the chain for the marginal likelihood estimation."
      required: false
      default: 1000000
    log_every:
      type: int
      help: "Log MLE every N steps."
      required: false
      default: 10000
    duplicates:
      type: int
      help: "Number of duplicate MLE runs."
      required: false
      default: 3
